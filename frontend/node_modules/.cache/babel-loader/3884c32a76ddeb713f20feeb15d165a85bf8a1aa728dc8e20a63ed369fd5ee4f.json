{"ast":null,"code":"var _jsxFileName = \"/Users/seanlongdale/Development/code/phase-3/phase-3-project/frontend/phase-3-frontend/src/PersonalRecords.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport { CurrentUserContext } from './UserInfo';\nimport RecordList from \"./RecordList\";\nimport Filter from './Filter';\nimport RecordAdd from './RecordAdd';\nimport ExerciseAdd from './ExerciseAdd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PersonalRecords() {\n  _s();\n  const [userRecords, setUserRecords] = useState([]);\n  const [exercises, setExercises] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [currentUser, setCurrentUser] = useContext(CurrentUserContext);\n  const [exerciseSearchTerm, setExerciseSearchTerm] = useState('');\n  const [categorySearchTerm, setCategorySearchTerm] = useState('');\n  useEffect(() => {\n    fetch(`http://localhost:9292/personal_records/${currentUser.id}`).then(r => r.json()).then(records => {\n      console.log(records);\n      setUserRecords(records);\n    });\n    fetch(\"http://localhost:9292/exercises\").then(r => r.json()).then(exercises => setExercises(exercises));\n    fetch(`http://localhost:9292/categories`).then(r => r.json()).then(resp => setCategories(resp));\n  }, []);\n  function handleDeleteRecord(id) {\n    const updatedRecords = userRecords.filter(record => record.id !== id);\n    setUserRecords(updatedRecords);\n  }\n  function handleRecordUpdate(updatedRecord) {\n    const updatedRecords = userRecords.map(record => {\n      if (record.id === updatedRecord.id) {\n        return updatedRecord;\n      } else {\n        return record;\n      }\n    });\n    setUserRecords(updatedRecords);\n  }\n  function handleExerciseFilter(exerciseSearchInput) {\n    setExerciseSearchTerm(exerciseSearchInput);\n  }\n  function handleCategoryFilter(categorySearchInput) {\n    setCategorySearchTerm(categorySearchInput);\n  }\n  function handleNewRecordAdd(newRecord) {\n    setUserRecords([newRecord, ...userRecords]);\n  }\n  function handleExerciseAdd(newExercise) {\n    setExercises([...exercises, newExercise]);\n    alert(\"New exercise added!\");\n  }\n  //console.log(userRecords)\n  function isLoggedIn() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"subtitle\",\n        children: \"Personal Records\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RecordAdd, {\n        exercises: exercises,\n        onNewRecordAdd: handleNewRecordAdd,\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ExerciseAdd, {\n        categories: categories,\n        onExerciseAdd: handleExerciseAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        onExerciseFilter: handleExerciseFilter,\n        onCategoryFilter: handleCategoryFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RecordList, {\n        records: userRecords,\n        onRecordDelete: handleDeleteRecord,\n        onRecordUpdate: handleRecordUpdate,\n        exerciseSearchTerm: exerciseSearchTerm,\n        categorySearchTerm: categorySearchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoggedIn()\n  }, void 0, false);\n}\n_s(PersonalRecords, \"PV28EZa/wr+k7SwBbKi7fh6gN0M=\");\n_c = PersonalRecords;\nexport default PersonalRecords;\nvar _c;\n$RefreshReg$(_c, \"PersonalRecords\");","map":{"version":3,"names":["React","useEffect","useState","useContext","CurrentUserContext","RecordList","Filter","RecordAdd","ExerciseAdd","jsxDEV","_jsxDEV","Fragment","_Fragment","PersonalRecords","_s","userRecords","setUserRecords","exercises","setExercises","categories","setCategories","currentUser","setCurrentUser","exerciseSearchTerm","setExerciseSearchTerm","categorySearchTerm","setCategorySearchTerm","fetch","id","then","r","json","records","console","log","resp","handleDeleteRecord","updatedRecords","filter","record","handleRecordUpdate","updatedRecord","map","handleExerciseFilter","exerciseSearchInput","handleCategoryFilter","categorySearchInput","handleNewRecordAdd","newRecord","handleExerciseAdd","newExercise","alert","isLoggedIn","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onNewRecordAdd","onExerciseAdd","onExerciseFilter","onCategoryFilter","onRecordDelete","onRecordUpdate","_c","$RefreshReg$"],"sources":["/Users/seanlongdale/Development/code/phase-3/phase-3-project/frontend/phase-3-frontend/src/PersonalRecords.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { CurrentUserContext } from './UserInfo';\nimport RecordList from \"./RecordList\";\nimport Filter from './Filter';\nimport RecordAdd from './RecordAdd';\nimport ExerciseAdd from './ExerciseAdd';\n\nfunction PersonalRecords() {\n    const [userRecords, setUserRecords] = useState([])\n    const [exercises, setExercises] = useState([])\n    const [categories, setCategories] = useState([])\n    const [currentUser, setCurrentUser ] = useContext(CurrentUserContext)\n    const [exerciseSearchTerm, setExerciseSearchTerm ] = useState('')\n    const [categorySearchTerm, setCategorySearchTerm ] = useState('')\n\n    useEffect(() => {\n        fetch(`http://localhost:9292/personal_records/${currentUser.id}`)\n          .then((r) => r.json())\n          .then((records) => {\n            console.log(records)\n            setUserRecords(records)}\n            );\n        fetch(\"http://localhost:9292/exercises\")\n          .then((r) => r.json())\n          .then((exercises) => setExercises(exercises));\n        fetch(`http://localhost:9292/categories`)\n          .then((r) => r.json())\n          .then((resp) => setCategories(resp));\n    }, []);\n\n    function handleDeleteRecord(id){\n        const updatedRecords = userRecords.filter((record) => record.id !== id);\n        setUserRecords(updatedRecords)\n    }\n    \n    function handleRecordUpdate(updatedRecord){\n        const updatedRecords = userRecords.map(record =>{\n            if (record.id === updatedRecord.id){\n                return updatedRecord\n            } else {\n                return record\n            }\n        })\n        setUserRecords(updatedRecords)\n    }\n\n    function handleExerciseFilter(exerciseSearchInput){\n        setExerciseSearchTerm(exerciseSearchInput)\n    }\n\n    function handleCategoryFilter(categorySearchInput){\n        setCategorySearchTerm(categorySearchInput)\n    }\n\n    function handleNewRecordAdd(newRecord){\n        setUserRecords([newRecord, ...userRecords])\n    }\n\n    function handleExerciseAdd(newExercise){\n        setExercises([...exercises, newExercise])\n        alert(\"New exercise added!\")\n    }\n//console.log(userRecords)\n    function isLoggedIn(){\n        return(\n            <>\n            <span className=\"subtitle\">Personal Records</span>\n            <RecordAdd \n                exercises={exercises}\n                onNewRecordAdd={handleNewRecordAdd} \n                currentUser={currentUser} />\n            <ExerciseAdd\n                categories={categories}\n                onExerciseAdd={handleExerciseAdd} />\n            <Filter \n                onExerciseFilter={handleExerciseFilter}\n                onCategoryFilter={handleCategoryFilter} />\n            <RecordList \n                records={userRecords}\n                onRecordDelete={handleDeleteRecord}\n                onRecordUpdate={handleRecordUpdate}\n                exerciseSearchTerm={exerciseSearchTerm}\n                categorySearchTerm={categorySearchTerm} />\n            </>\n        )\n    }\n\n    return (\n        <> \n        {isLoggedIn()}\n        </>\n    )\n\n}\n\nexport default PersonalRecords;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}