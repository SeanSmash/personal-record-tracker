{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Record(_ref) {\n  _s();\n  let {\n    record\n  } = _ref;\n  const [exercise, setExercise] = useState([]);\n  const [categories, setCategories] = useState([]);\n  console.log(record);\n\n  // useEffect(() => {\n  //     fetch(`http://localhost:9292/exercises/${record.record.exercise_id}`)\n  //       .then((r) => r.json())\n  //       .then((resp) => setExercise(resp));\n  //     fetch(`http://localhost:9292/exercises/${record.record.exercise_id}/categories`)\n  //       .then((r) => r.json())\n  //       .then((resp) => setCategories(resp));\n  //   }, []);\n\n  // function categoryDisplay(){\n  //     const categoryArray = categories.map(category => {\n  //         return category.category\n  //     })\n  //     return (\n  //         <td>{categoryArray.join(\", \")}</td>\n  //     )\n  // }\n\n  // function metricDisplay(){\n  //     if (exercise.for_reps){\n  //         return(\n  //             <td>{record.record.metric} reps</td>\n  //         )\n  //     } else if (exercise.for_weight){\n  //         return(\n  //             <td>{record.record.metric} lbs</td>\n  //         )\n  //     } else if (exercise.for_time){\n  //         const minutes = Math.floor(record.record.metric / 60)\n  //         const seconds = (record.record.metric % 60)\n  //         return(\n  //             <td>{minutes} mins, {seconds} secs</td>\n  //         )\n  //     }\n  // }\n\n  // function recordDelete(){\n  //     //console.log(record.record.id)\n  //     fetch(`http://localhost:9292//personal_records/${record.record.id}`, {\n  //             method:\"DELETE\"\n  //         })\n  //    //onDeleteRecord()\n  // }\n\n  return (\n    /*#__PURE__*/\n    // <tr key={record.record.id}>\n    //     <td>{exercise.exercise}</td>\n    //     {metricDisplay()}\n    //     <td>{record.record.date_created.slice(0,10)}</td>\n    //     {categoryDisplay()}\n    //     <td><button>edit</button></td>\n    //     <td><button onClick={recordDelete}>delete</button></td>\n    // </tr>\n    _jsxDEV(_Fragment, {}, void 0, false)\n  );\n}\n_s(Record, \"161XuWYYTzrB7hiosb4gMKQcCmE=\");\n_c = Record;\nexport default Record;\nvar _c;\n$RefreshReg$(_c, \"Record\");","map":{"version":3,"names":["React","useState","useEffect","Fragment","_Fragment","jsxDEV","_jsxDEV","Record","_ref","_s","record","exercise","setExercise","categories","setCategories","console","log","_c","$RefreshReg$"],"sources":["/Users/seanlongdale/Development/code/phase-3/phase-3-project/frontend/phase-3-frontend/src/Record.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Record({ record }){\n    const [exercise, setExercise] = useState([])\n    const [categories, setCategories] = useState([])\n\n    console.log(record)\n\n    // useEffect(() => {\n    //     fetch(`http://localhost:9292/exercises/${record.record.exercise_id}`)\n    //       .then((r) => r.json())\n    //       .then((resp) => setExercise(resp));\n    //     fetch(`http://localhost:9292/exercises/${record.record.exercise_id}/categories`)\n    //       .then((r) => r.json())\n    //       .then((resp) => setCategories(resp));\n    //   }, []);\n\n    // function categoryDisplay(){\n    //     const categoryArray = categories.map(category => {\n    //         return category.category\n    //     })\n    //     return (\n    //         <td>{categoryArray.join(\", \")}</td>\n    //     )\n    // }\n\n    // function metricDisplay(){\n    //     if (exercise.for_reps){\n    //         return(\n    //             <td>{record.record.metric} reps</td>\n    //         )\n    //     } else if (exercise.for_weight){\n    //         return(\n    //             <td>{record.record.metric} lbs</td>\n    //         )\n    //     } else if (exercise.for_time){\n    //         const minutes = Math.floor(record.record.metric / 60)\n    //         const seconds = (record.record.metric % 60)\n    //         return(\n    //             <td>{minutes} mins, {seconds} secs</td>\n    //         )\n    //     }\n    // }\n\n    // function recordDelete(){\n    //     //console.log(record.record.id)\n    //     fetch(`http://localhost:9292//personal_records/${record.record.id}`, {\n    //             method:\"DELETE\"\n    //         })\n    //    //onDeleteRecord()\n    // }\n\nreturn (\n    // <tr key={record.record.id}>\n    //     <td>{exercise.exercise}</td>\n    //     {metricDisplay()}\n    //     <td>{record.record.date_created.slice(0,10)}</td>\n    //     {categoryDisplay()}\n    //     <td><button>edit</button></td>\n    //     <td><button onClick={recordDelete}>delete</button></td>\n    // </tr>\n    <></>\n)\n}\n\nexport default Record;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,MAAMA,CAAAC,IAAA,EAAY;EAAAC,EAAA;EAAA,IAAX;IAAEC;EAAO,CAAC,GAAAF,IAAA;EACtB,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEhDc,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;;EAEnB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEJ;IAAA;IACI;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAJ,OAAA,CAAAF,SAAA;EAAK;AAET;AAACK,EAAA,CA7DQF,MAAM;AAAAU,EAAA,GAANV,MAAM;AA+Df,eAAeA,MAAM;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}