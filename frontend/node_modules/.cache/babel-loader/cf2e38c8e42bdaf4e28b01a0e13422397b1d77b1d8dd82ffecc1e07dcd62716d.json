{"ast":null,"code":"var _jsxFileName = \"/Users/seanlongdale/Development/code/phase-3/phase-3-project/frontend/phase-3-frontend/src/ExerciseAdd.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Popup from \"reactjs-popup\";\nimport CategoryAdd from \"./CategoryAdd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExerciseAdd(_ref) {\n  _s();\n  let {\n    categories,\n    onExerciseAdd,\n    onCategoryAdd\n  } = _ref;\n  const [categoriesToAdd, setCategoriesToAdd] = useState([]);\n  const [metricType, setMetricType] = useState('for_reps');\n  const [newExercise, setNewExercise] = useState('');\n  //console.log(categories)\n  function handleCategoriesToAdd(e) {\n    if (e.target.value === \"reset\") {\n      setCategoriesToAdd([]);\n    } else if (e.target.value === \"category\") {\n      setCategoriesToAdd([...categoriesToAdd]);\n    } else {\n      setCategoriesToAdd([...categoriesToAdd, e.target.value]);\n    }\n  }\n  function clearExerciseAddContents() {\n    setMetricType('');\n    setCategoriesToAdd([]);\n    setNewExercise('');\n  }\n  function handleExerciseAddSubmit(e) {\n    e.preventDefault();\n    let metric = [];\n    if (metricType === \"for_reps\") {\n      metric = [\"true\", \"false\", \"false\"];\n    } else if (metricType === \"for_time\") {\n      metric = [\"false\", \"true\", \"false\"];\n    } else {\n      metric = [\"false\", \"false\", \"true\"];\n    }\n    fetch(\"http://localhost:9292/exercises\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        exercise: newExercise,\n        for_reps: metric[0],\n        for_time: metric[1],\n        for_weight: metric[2]\n      })\n    }).then(r => r.json()).then(newEx => {\n      onExerciseAdd(newEx);\n      console.log(newEx);\n    });\n    // categoriesToAdd.map(cat =>{\n    //     fetch(\"http://localhost:9292/exercise_categories\", {\n    //         method: \"POST\",\n    //         headers: {\n    //             \"Content-Type\": \"application/json\",\n    //         },\n    //         body: JSON.stringify({\n    //             category_id: cat.id,\n    //             exercise_id: newEx.id\n    //         }),\n    //     })  \n    //     .then((r) => r.json())\n    //     .then((newCatEx) => console.log(newCatEx));\n    // })\n\n    clearExerciseAddContents();\n  }\n  return /*#__PURE__*/_jsxDEV(Popup, {\n    trigger: /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"add-exercise-btn\",\n      children: \"Add Exercise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 18\n    }, this),\n    modal: true,\n    nested: true,\n    children: close => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"exercise-add-form\",\n        onSubmit: e => {\n          handleExerciseAddSubmit(e);\n          close();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Add Exercise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newExercise,\n          onChange: e => setNewExercise(e.target.value),\n          placeholder: \"exercise name...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"form-submit\",\n          type: \"submit\",\n          value: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 73\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: metricType,\n          onChange: e => setMetricType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"for_reps\",\n            children: \"For Reps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"for_time\",\n            children: \"For Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"for_weight\",\n            children: \"For Weight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(CategoryAdd, {\n          categories: categories,\n          categoriesToAdd: categoriesToAdd,\n          handleCategoriesToAdd: handleCategoriesToAdd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"form-clear\",\n        onClick: clearExerciseAddContents,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(ExerciseAdd, \"M/+H6/g9AtF98l+iVgt9E8+jdfU=\");\n_c = ExerciseAdd;\nexport default ExerciseAdd;\nvar _c;\n$RefreshReg$(_c, \"ExerciseAdd\");","map":{"version":3,"names":["React","useState","Popup","CategoryAdd","jsxDEV","_jsxDEV","ExerciseAdd","_ref","_s","categories","onExerciseAdd","onCategoryAdd","categoriesToAdd","setCategoriesToAdd","metricType","setMetricType","newExercise","setNewExercise","handleCategoriesToAdd","e","target","value","clearExerciseAddContents","handleExerciseAddSubmit","preventDefault","metric","fetch","method","headers","body","JSON","stringify","exercise","for_reps","for_time","for_weight","then","r","json","newEx","console","log","trigger","id","children","fileName","_jsxFileName","lineNumber","columnNumber","modal","nested","close","className","onSubmit","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/seanlongdale/Development/code/phase-3/phase-3-project/frontend/phase-3-frontend/src/ExerciseAdd.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Popup from \"reactjs-popup\";\nimport CategoryAdd from \"./CategoryAdd\";\n\nfunction ExerciseAdd({ categories, onExerciseAdd, onCategoryAdd }){\n    const [categoriesToAdd, setCategoriesToAdd] = useState([])\n    const [metricType, setMetricType] = useState('for_reps')\n    const [newExercise, setNewExercise] = useState('')\n//console.log(categories)\n    function handleCategoriesToAdd(e){\n        if (e.target.value === \"reset\"){\n            setCategoriesToAdd([])\n        } else if (e.target.value === \"category\"){\n            setCategoriesToAdd([...categoriesToAdd])\n        } else {setCategoriesToAdd([...categoriesToAdd, e.target.value])}\n    }\n\n    function clearExerciseAddContents(){\n        setMetricType('')\n        setCategoriesToAdd([])\n        setNewExercise('')\n    }\n\n    function handleExerciseAddSubmit(e){\n        e.preventDefault()\n        let metric = []\n        if (metricType === \"for_reps\"){\n            metric = [\"true\", \"false\", \"false\"]\n        } else if (metricType === \"for_time\"){\n            metric = [\"false\", \"true\", \"false\"]\n        } else {\n            metric = [\"false\", \"false\", \"true\"]\n        }\n\n        fetch(\"http://localhost:9292/exercises\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                exercise: newExercise,\n                for_reps: metric[0],\n                for_time: metric[1],\n                for_weight: metric[2]\n            }),\n        })\n        .then((r) => r.json())\n        .then((newEx) => {\n            onExerciseAdd(newEx)\n            console.log(newEx);\n        })\n        // categoriesToAdd.map(cat =>{\n        //     fetch(\"http://localhost:9292/exercise_categories\", {\n        //         method: \"POST\",\n        //         headers: {\n        //             \"Content-Type\": \"application/json\",\n        //         },\n        //         body: JSON.stringify({\n        //             category_id: cat.id,\n        //             exercise_id: newEx.id\n        //         }),\n        //     })  \n        //     .then((r) => r.json())\n        //     .then((newCatEx) => console.log(newCatEx));\n        // })\n             \n        clearExerciseAddContents()\n    }\n\n    return(\n        <Popup trigger=\n                {<button id=\"add-exercise-btn\">Add Exercise</button>}\n            modal nested>\n            {close => (\n                <div>\n                <form className=\"exercise-add-form\" onSubmit={(e) => {\n                        handleExerciseAddSubmit(e)\n                        close()\n                    }}>\n                    <legend>Add Exercise</legend>\n                    <input type=\"text\" value={newExercise} onChange={e => setNewExercise(e.target.value)} placeholder=\"exercise name...\"/>\n                    <input id=\"form-submit\" type=\"submit\" value=\"Add\" /><br></br>\n                    <select value={metricType} onChange={e => setMetricType(e.target.value)}>\n                        <option value=\"for_reps\">For Reps</option>\n                        <option value=\"for_time\">For Time</option>\n                        <option value=\"for_weight\">For Weight</option>\n                    </select><br></br>\n                    <CategoryAdd \n                        categories={categories} \n                        categoriesToAdd={categoriesToAdd} \n                        handleCategoriesToAdd={handleCategoriesToAdd}\n                    />\n                </form>\n                <button id=\"form-clear\" onClick={clearExerciseAddContents}>Clear</button>\n                </div>\n            )}\n          </Popup>\n    )\n}\n\nexport default ExerciseAdd;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}